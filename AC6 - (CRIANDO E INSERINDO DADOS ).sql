CREATE TABLE UNIDADES
(
COD_UNIDADE			INT IDENTITY NOT NULL,
NOME_UNIDADE		VARCHAR(50) NOT NULL,

CONSTRAINT COD_UNIDADE PRIMARY KEY(COD_UNIDADE)
);

--INSERINDO VALORES NA TABELA UNIDADE
INSERT INTO UNIDADES (NOME_UNIDADE)
VALUES	('PEÇAS'),
('METROS'),
('QUILOGRAMAS'),
('DÚZIAS'),
('PACOTE'),
('CAIXA');

--VISUALIZANDO OS VALORES INSERIDOS (UNIDADES)
SELECT * FROM UNIDADES;


CREATE TABLE CATEGORIAS
(
COD_CATEGORIA		INT IDENTITY NOT NULL,
NOME_CATEGORIA		VARCHAR(50) NOT NULL,

CONSTRAINT COD_CATEGORIA PRIMARY KEY(COD_CATEGORIA)
);

--INSERINDO VALORES NA TABELA CATEGORIAS 
INSERT INTO CATEGORIAS (NOME_CATEGORIA)
VALUES ('MOUSE'),
('PEN-DRIVE'),
('MONITOR DE VIDEO'),
('TECLADO'),
('CPU'),
('CABO DE REDE');

--VISUALIZANDO OS VALORES INSERIDOS (CATEGORIAS)
SELECT*FROM CATEGORIAS;

CREATE TABLE PRODUTOS
(
COD_PRODUTO			INT IDENTITY NOT NULL,
NOME_PRODUTO		VARCHAR(100) NOT NULL,
COD_UNIDADE			INT, --FK TABELA UNIDADE
COD_CATEGORIA		INT, --FK TABELA CATEGORIA
QUANT_ESTOQUE		INT NOT NULL,
QUANT_MINIMA		TINYINT NOT NULL,
PRECO_CUSTO			INT NOT NULL,
PRECO_VENDA			INT NOT NULL,
CARACT_TECNICAS		VARCHAR(8000),

CONSTRAINT COD_PRODUTO PRIMARY KEY(COD_PRODUTO),
CONSTRAINT COD_UNIDADE_CHAVE_ESTRANGEIRA FOREIGN KEY(COD_UNIDADE)
REFERENCES UNIDADES(COD_UNIDADE),
CONSTRAINT COD_CATEGORIA_CHAVE_ESTRANGEIRA FOREIGN KEY(COD_CATEGORIA)
REFERENCES CATEGORIAS(COD_CATEGORIA)
);

DROP TABLE PRODUTOS --EXCLUINDO TABELA PRODUTOS PARA TESTE ({CANNOT} SEM PERMISSÃO PARA TAL)

--INSERINDO VALORES A TABELA PRODUTOS 
INSERT INTO PRODUTOS (NOME_PRODUTO,COD_UNIDADE,COD_CATEGORIA, QUANT_ESTOQUE, QUANT_MINIMA, PRECO_CUSTO, PRECO_VENDA)
VALUES
('CANETA AZUL',1,1,150,40,0.5,0.75),
('CANETA VERDE',1,1,50,40,0.5,0.75),
('CANETA VERMELHA',1,1,80,35,0.5,0.75),
('LÁPIS',1,1,400,80,0.5,0.8),
('RÉGUA',1,1,40,10,1,1.5);

--VISUALIZANDO OS VALORES INSERIDOS (PRODUTOS) 
SELECT*FROM PRODUTOS;


--ALTERANDO VALORES NO ARQUIVO SCRIPT_TABELAS.SQL

--AUMENTANDO O PREÇO DE CUSTO DE TODOS OS PRODUTOS DO TIPO 2 EM 15%
UPDATE [dbo].[TB_PRODUTO]
SET [PRECO_CUSTO] = ([PRECO_CUSTO] * 15)/100
WHERE [COD_TIPO] = 2

--PREÇOS DE PRODUTOS TIPO 2 FICANDO 30% ACIMA DO PREÇO DE CUSTO  
UPDATE [dbo].[TB_PRODUTO]
SET [PRECO_VENDA] = ([PRECO_CUSTO] * 30)/100
WHERE [COD_TIPO] = 2

--ALTERANDO O CAMPO IPI DE TODOS OS PRODUTOS DO COD = 3 PARA IPI = 5
UPDATE [dbo].[TB_PRODUTO]
SET [IPI] = 5
WHERE [COD_TIPO] = 3

--REDUZINDO EM 10% O CAMPO QTD_MINIMA DE TODOS OS PRODUTOS MULTIPLICANDO QTD_MINIMA POR 0.9
UPDATE [dbo].[TB_PRODUTO]
SET [QTD_MINIMA] = - ([QTD_MINIMA] * 10)/100,
[QTD_MINIMA] = [QTD_MINIMA] * 0.9

--ATERANDO OS CAMPOS DO CLIENTE DO COD = 11
UPDATE [dbo].[TB_CLIENTE]
SET [ENDERECO] = 'AV. CELSO GARCIA, 1234',
[BAIRRO] = 'TATUAPE',
[CIDADE] = 'SAO PAULO',
[ESTADO] = 'SP',
[CEP] = '03407080'
WHERE [CODCLI] = 11

--ALTERANDO DADOS DO COD_CLIENTE = 13
UPDATE [dbo].[TB_CLIENTE]
SET [END_COB] = [ENDERECO],
 [BAI_COB] = [BAIRRO],
 [CID_COB] = [CIDADE],
 [EST_COB] = [ESTADO],
 [CEP_COB] = [CEP]
 WHERE [CODCLI] = 13

 --ALTERANDO A TABELAS CLIENTES, CLIENTES COM O ESTADO RJ, RO, AC, RR, MG, PR, SC, RS, MS E MT PARA O ICMS = 12
 UPDATE [dbo].[TB_CLIENTE]
 SET [ICMS] = 12
 WHERE [ESTADO] = 'RJ'AND[ESTADO] = 'RO' AND[ESTADO] = 'AC' AND[ESTADO] = 'RR' AND[ESTADO] = 'MG' AND[ESTADO] = 'PR' AND[ESTADO] = 'SC' AND[ESTADO] = 'RS' AND[ESTADO] = 'MS' AND[ESTADO] = 'MT'

 --ALTERANDO OS CAMPOS COM ESTADO DE SP PARA ICMS = 18 
 UPDATE [dbo].[TB_CLIENTE]
 SET [ICMS] = 18
 WHERE [ESTADO] = 'SP'

--ATERANDO ICMS = 7 PARA CLIENTES QUE NÃO SEJAM DOS ESTADOS RJ, RO, AC, RR, MG,PR, SC, RS, MS, MT, SP
UPDATE [dbo].[TB_CLIENTE]
SET [ICMS] = 7 
WHERE NOT [ESTADO] = 'RJ' AND NOT [ESTADO] = 'RO' AND NOT [ESTADO] = 'AC' AND NOT [ESTADO] = 'RR' AND NOT [ESTADO] = 'MG' AND NOT [ESTADO] = 'PR' AND NOT [ESTADO] = 'SC' AND NOT [ESTADO] = 'RS' AND NOT [ESTADO] = 'MS' AND NOT [ESTADO] = 'MT' AND NOT [ESTADO] = 'SP'

--ALTERANDO PARA 7 O DESCONTO, COM PRODUTOS COM ID = 8 E COM ENTREGA PARA JANEIRO DE 2007 E COM QUANTIDADE ACIMA DE 1000
UPDATE [dbo].[TB_ITENSPEDIDO]
SET [DESCONTO] = 7 
WHERE [ID_PRODUTO] = 8 AND [DATA_ENTREGA] = 2007/01 AND [QUANTIDADE] > 1000

--VAI ZERAR O DESCONTO EM 0, SE ELE FOR MENOR QUE 1000 E QUE SEJA POSTERIOR A 2007/06/01 E DESCONTO FOR MAIOR QUE 0 
UPDATE [dbo].[TB_ITENSPEDIDO]
SET [DESCONTO] = 0
WHERE [DESCONTO] < 1000 AND [DATA_ENTREGA] > 2007/06/01 AND [DESCONTO] > 0 

--CRIANDO UMA CÓPIA DA TABELA TB_VENDEDORES PARA VENDEDORES_TMP
SELECT * INTO VENDEDORES_TMP FROM [dbo].[TB_VENDEDOR]

--EXCLUINDO RESGISTROS DE VENDENDORES_TMP COM CODVEN MAIOR QUE 5 
DELETE FROM [VENDEDORES_TMP] WHERE [CODVEN] > 5

--FAZENDO UM CÓPIA DA TABELA TB_PEDIDOS PARA COPIA_PEDIDOS
SELECT * INTO COPIA_PEDIDOS FROM [dbo].[TB_PEDIDO]

--EXCLUINDO CÓPIA DA TB_PEDIDO(COPIA_PEDIDOS) COM O CODVEN = 2
DELETE FROM [COPIA_PEDIDOS] WHERE [CODVEN] = 2

--EXCLUINDO OS REGISTROS DA TABELA COPIA_PEDIDOS QUE SEJAM DO PRIMEIRO SEMESTRE DE 2007 
DELETE FROM [COPIA_PEDIDOS] WHERE [DATA_EMISSAO] >= 2007/01/01 AND [DATA_EMISSAO] <= 2007/06/30

--EXCLUINDO TODOS OS REGISTROS DA TABELA COPIA_PEDIDOS
TRUNCATE TABLE [COPIA_PEDIDOS]
